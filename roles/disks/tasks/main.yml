---

- name: Find all disks
  ansible.builtin.set_fact:
    disks: "{{ ansible_devices.keys() | select('match', '^vd[a-z]$') | list }}"

- name: Show disks
  ansible.builtin.debug:
    var: disks

- name: Check filesystem type
  ansible.builtin.command: "lsblk -f -l /dev/{{ item }}"
  register: disk_check
  ignore_errors: true
  loop: "{{ disks }}"
  changed_when: disk_check is defined

- name: Set fact for unformatted disks
  ansible.builtin.set_fact:
    unformatted_disks: "{{ unformatted_disks | default([]) + [item.item] }}"
  when: "'ext4' not in item.stdout and 'xfs' not in item.stdout"
  loop_control:
    label: "{{ item.stdout }}"
  loop: "{{ disk_check.results }}"

- name: Show unformatted_disks
  ansible.builtin.debug:
    var: unformatted_disks

- name: Create an ext4 primary partition
  when: unformatted_disks is defined
  community.general.parted:
    device: "/dev/{{ item }}"
    number: 1
    state: present
    fs_type: ext4
    label: gpt
    part_type: primary
    part_start: "0%"
    part_end: "100%"
  with_items: "{{ unformatted_disks }}"

- name: Format the drive
  when: unformatted_disks is defined
  community.general.filesystem:
    fstype: ext4
    dev: "/dev/{{ item }}1"
  with_items: "{{ unformatted_disks }}"

- name: Set fact for formatted disks
  ansible.builtin.set_fact:
    formatted_disks: "{{ formatted_disks | default([]) + [item.stdout_lines[2].split()[0]] }}"
  when: "'ext4' in item.stdout"
  loop_control:
    label: "{{ item.stdout }}"
  loop: "{{ disk_check.results }}"

- name: Show formatted_disks
  ansible.builtin.debug:
    var: formatted_disks

- name: Ensure mountpoint exists
  ansible.builtin.file:
    path: "{{ item.mountpoint }}"
    state: directory
    group: "{{ item.mountpoint_group }}"
    owner: "{{ item.mountpoint_owner }}"
    mode: "0777"
  with_items: "{{ disks_disk_mounts }}"

- name: Mount disks
  ansible.posix.mount:
    path: "{{ item[0].mountpoint }}"
    src: "/dev/{{ item[1] }}"
    fstype: ext4
    state: mounted
    boot: true
  with_nested:
    - "{{ disks_disk_mounts }}"
    - "{{ formatted_disks }}"
