---

- name: Run lsblk command to get disk info
  ansible.builtin.command: lsblk -J -o NAME,TYPE,FSTYPE
  register: lsblk_output
  changed_when: lsblk_output is defined

- name: Display lsblk output
  ansible.builtin.debug:
    msg: "{{ lsblk_output.stdout }}"

- name: Find unformatted disks
  ansible.builtin.set_fact:
    unformatted_disks: >
      {{
        lsblk_output.stdout | from_json |
        json_query("blockdevices[?children == null && type == 'disk'].name")
      }}

- name: Display unformatted disks
  ansible.builtin.debug:
    msg: "Unformatted disks: {{ unformatted_disks }}"

- name: Create an ext4 primary partition
  when: unformatted_disks is defined
  community.general.parted:
    device: "/dev/{{ item }}"
    number: 1
    state: present
    fs_type: ext4
    label: gpt
    part_type: primary
    part_start: "0%"
    part_end: "100%"
  with_items: "{{ unformatted_disks }}"

- name: Format the drive
  when: unformatted_disks is defined
  community.general.filesystem:
    fstype: ext4
    dev: "/dev/{{ item }}1"
  with_items: "{{ unformatted_disks }}"

- name: Run lsblk command to get disk info
  ansible.builtin.command: lsblk -J -o NAME,TYPE,FSTYPE,MOUNTPOINTS
  register: lsblk_output
  changed_when: lsblk_output is defined

- name: Display lsblk output
  ansible.builtin.debug:
    msg: "{{ lsblk_output.stdout }}"

- name: Find ummounted disks
  ansible.builtin.set_fact:
    unmounted_disks: >
      {{
        lsblk_output.stdout | from_json |
        json_query("blockdevices[].children[?fstype=='ext4' && mountpoints[0]==null].name") | flatten
      }}

- name: Display ummounted disks
  ansible.builtin.debug:
    msg: "Unmounted disks: {{ unmounted_disks }}"

- name: Ensure mountpoint exists
  ansible.builtin.file:
    path: "{{ item.mountpoint }}"
    state: directory
    group: "{{ item.mountpoint_group }}"
    owner: "{{ item.mountpoint_owner }}"
    mode: "0777"
  with_items: "{{ disks_disk_mounts }}"

- name: Mount disks
  ansible.posix.mount:
    path: "{{ item[0].mountpoint }}"
    src: "/dev/{{ item[1] }}"
    fstype: ext4
    state: mounted
    boot: true
  with_nested:
    - "{{ disks_disk_mounts }}"
    - "{{ unmounted_disks }}"
