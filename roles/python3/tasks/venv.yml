---

- name: Set Python {{ python3_version }} as system default
  community.general.alternatives:
    name: python3
    path: "/usr/bin/python{{ python3_version }}"
    link: /usr/bin/python3
    priority: 100
    state: selected

- name: Install Python packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop: "{{ python3_packages_to_install }}"

- name: Create virtual environment folder
  ansible.builtin.file:
    path: "{{ python3_venv_folder }}"
    state: directory
    mode: "0777"
    group: "ansible"
  become: true

- name: Create Python virtual environment
  ansible.builtin.command: "/usr/bin/python{{ python3_version }} -m venv {{ python3_venv_folder }} --without-pip"
  args:
    creates: "{{ python3_venv_folder }}/bin/activate"
  register: python3_command_return
  changed_when: python3_command_return.rc !=0

- name: Download get-pip.py
  ansible.builtin.get_url:
    url: https://bootstrap.pypa.io/get-pip.py
    dest: "{{ python3_venv_folder }}/get-pip.py"
    mode: '0644'
    force: true

- name: Install pip inside the virtual environment
  ansible.builtin.command: "{{ python3_venv_folder }}/bin/python3 {{ python3_venv_folder }}/get-pip.py"
  args:
    creates: /opt/myenv/bin/pip

- name: Generate requirements.txt from package list
  ansible.builtin.template:
    src: requirements.txt.j2
    dest: "{{ python3_venv_folder }}/requirements.txt"
    mode: "0644"

- name: Install packages via pip in virtualenv
  ansible.builtin.pip:
    requirements: "{{ python3_venv_folder }}/requirements.txt"
    virtualenv: "{{ python3_venv_folder }}"
    state: present
  register: python3_pip_install_output
  changed_when: python3_pip_install_output.changed
  failed_when: python3_pip_install_output.failed
