---

- name: Create virtual environment folder
  ansible.builtin.file:
    path: "{{ python3_venv_folder }}"
    state: directory
    mode: "0777"
    group: "ansible"
  become: true

- name: Create Python virtual environment
  ansible.builtin.command: "{{ ansible_python_interpreter }} -m venv {{ python3_venv_folder }}"
  args:
    creates: "{{ python3_venv_folder }}/bin/activate"
  register: python3_command_return
  changed_when: python3_command_return.rc !=0

# Cannot use ansible.builtin.pip here so using shell instead
- name: Make sure packaging module is available
  ansible.builtin.shell: |
    umask 0022
    if ! {{ python3_venv_folder }}/bin/python3 -c "import packaging" &> /dev/null; then
      {{ python3_venv_folder }}/bin/python3 -m pip install packaging==25
    else
      echo "packaging module already installed."
    fi
  register: pip_install_output
  changed_when: "'Successfully installed packaging' in pip_install_output.stdout"
  failed_when: pip_install_output.rc != 0 and 'packaging module already installed' not in pip_install_output.stdout

- name: Upgrade Python pip
  ansible.builtin.shell: |
    umask 0022
    {{ python3_venv_folder }}/bin/python3 -m pip install --upgrade pip
  register: pip_upgrade_output
  changed_when: "'Successfully installed pip' in pip_upgrade_output.stdout"
  failed_when: pip_upgrade_output.rc != 0 and 'Successfully installed' not in pip_upgrade_output.stdout
