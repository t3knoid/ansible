---

- name: Install Python modules
  ansible.builtin.pip:
    name: "{{ item }}"
    virtualenv: "/opt/python_{{ python3_version }}"
    state: present
    umask: "0022"
  loop: "{{ ansible_node_python_modules }}"

- name: Ensure ansible group exists
  ansible.builtin.group:
    name: ansible
    state: present

- name: Store USER value, set to undefined if not defined
  ansible.builtin.set_fact:
    current_user: "{{ lookup('ansible.builtin.env', 'USER') }}"

# In case USER value is empty
- name: Store SUDO_USER value
  ansible.builtin.set_fact:
    sudo_user: "{{ ansible_env.SUDO_USER }}"

- name: Add current_user to ansible group, if undefined, use SUDO_USER value instead
  ansible.builtin.user:
    name: "{{ current_user | default(sudo_user, true) }}"
    groups: ansible
    shell: /bin/bash
    append: true

- name: Add custom user list to ansible group
  ansible.builtin.user:
    name: "{{ item }}"
    groups: ansible
    shell: /bin/bash
    append: true
  loop: "{{ ansible_node_custom_sudo_users }}"
  
- name: Ensure sudoers.d directory exists
  ansible.builtin.file:
    path: /etc/sudoers.d
    state: directory
    mode: '0755'

- name: Add 'ansible' group to sudoers with NOPASSWD
  ansible.builtin.lineinfile:
    path: /etc/sudoers.d/99_ansible
    create: true
    state: present
    line: '%ansible ALL=(ALL) NOPASSWD:ALL'
    mode: '0644'
    validate: 'visudo -cf %s'

- name: Reboot virtual machine
  ansible.builtin.include_role:
    name: vms
    tasks_from: reboot_nowait.yml
