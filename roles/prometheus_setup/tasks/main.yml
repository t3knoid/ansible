---
- name: Download and Extract Prometheus
  ansible.builtin.unarchive:
    src: >
      https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_setup_version }}/prometheus-{{ prometheus_setup_version }}.linux-amd64.tar.gz
    dest: /opt/
    remote_src: true
    creates: "/opt/prometheus-{{ prometheus_setup_version }}.linux-amd64"
    mode: '0755'

- name: Create symlink for Prometheus
  ansible.builtin.file:
    src: "/opt/prometheus-{{ prometheus_setup_version }}.linux-amd64"
    dest: "{{ prometheus_setup_home }}"
    state: link
    force: true

- name: Set ownership for Prometheus directory
  ansible.builtin.file:
    path: "/opt/prometheus-{{ prometheus_setup_version }}.linux-amd64"
    owner: "{{ prometheus_setup_user }}"
    group: "{{ prometheus_setup_group }}"
    recurse: true

- name: Copy Prometheus binary to /usr/local/bin
  ansible.builtin.copy:
    src: /opt/prometheus/prometheus
    dest: /usr/local/bin/prometheus
    owner: "{{ prometheus_setup_user }}"
    group: "{{ prometheus_setup_group }}"
    mode: "{{ prometheus_setup_mode }}"
    remote_src: true

- name: Create Prometheus data directory
  ansible.builtin.file:
    path: "{{ prometheus_setup_data_dir }}"
    state: directory
    owner: "{{ prometheus_setup_user }}"
    group: "{{ prometheus_setup_group }}"
    mode: "{{ prometheus_setup_data_mode }}"

- name: Create Prometheus TSDB directory
  ansible.builtin.file:
    path: "{{ prometheus_setup_tsdb_dir }}"
    state: directory
    owner: "{{ prometheus_setup_user }}"
    group: "{{ prometheus_setup_group }}"
    mode: "{{ prometheus_setup_data_mode }}"

- name: Create Prometheus etc directory
  ansible.builtin.file:
    path: "{{ prometheus_setup_data_dir }}/etc"
    state: directory
    owner: "{{ prometheus_setup_user }}"
    group: "{{ prometheus_setup_group }}"
    mode: "{{ prometheus_setup_data_mode }}"

- name: Create Prometheus consoles directory
  ansible.builtin.file:
    path: "{{ prometheus_setup_console_templates }}"
    state: directory
    owner: "{{ prometheus_setup_user }}"
    group: "{{ prometheus_setup_group }}"
    mode: "{{ prometheus_setup_data_mode }}"

- name: Create Prometheus console_libraries directory
  ansible.builtin.file:
    path: "{{ prometheus_setup_console_libraries }}"
    state: directory
    owner: "{{ prometheus_setup_user }}"
    group: "{{ prometheus_setup_group }}"
    mode: "{{ prometheus_setup_data_mode }}"

- name: Copy Prometheus configuration file
  ansible.builtin.template:
    src: prometheus.yml.j2
    dest: "{{ prometheus_setup_config_file }}"
    owner: "{{ prometheus_setup_user }}"
    group: "{{ prometheus_setup_group }}"
    mode: "{{ prometheus_setup_config_mode }}"
    backup: true
  notify:
    - Reload Prometheus configuration

- name: Copy Prometheus rule file
  ansible.builtin.template:
    src: prometheus.rules.yml.j2
    dest: "{{ prometheus_setup_rules_file }}"
    owner: "{{ prometheus_setup_user }}"
    group: "{{ prometheus_setup_group }}"
    mode: "{{ prometheus_setup_config_mode }}"
    backup: true
  notify:
    - Reload Prometheus configuration

- name: Create a Prometheus backup directory on /nfs/backups/
  ansible.builtin.file:
    path: "/nfs/backups/prometheus"
    state: directory
    mode: '0755'
    owner: "{{ prometheus_setup_user }}"
    group: "{{ prometheus_setup_group }}"

# Use a bind mount to link the NFS directory to the Prometheus snapshots directory
# otherwise, an invalid cross-device link error occurs during snapshot creation
# if a softlink is used instead.
- name: Bind mount NAS share to Prometheus data directory
  ansible.posix.mount:
    path: "{{ prometheus_setup_snapshots_dir }}"
    src: /nfs/backups/prometheus
    fstype: none
    opts: bind
    state: mounted

- name: Create Prometheus systemd service file
  ansible.builtin.template:
    src: prometheus.service.j2
    dest: "{{ prometheus_setup_service_file }}"
    owner: "{{ prometheus_setup_user }}"
    group: "{{ prometheus_setup_group }}"
    mode: "{{ prometheus_setup_data_mode }}"
  notify:
    - Reload systemd daemon
    - Restart Prometheus service

- name: Enable and start Prometheus service
  ansible.builtin.systemd:
    name: prometheus
    enabled: true
    state: started
