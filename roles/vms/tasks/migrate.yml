---

- name: Include get_vms_vmid tasks
  ansible.builtin.include_tasks: "get_vms_vmid.yml"
  when: vms_vmid is not defined

- name: Get a list of vms
  ansible.builtin.uri:
    url: 'https://{{ global_proxmox_api_host }}:8006/api2/json/cluster/resources?type=vm'
    method: GET
    headers:
      Authorization: "PVEAPIToken={{ global_proxmox_api_user }}!{{ global_proxmox_api_token_id }}={{ global_proxmox_api_token }}"
    follow_redirects: safe
    validate_certs: false
  register: vms_vm_list
  delegate_to: localhost

- name: Get node where new virtual machine is located using vmid
  ansible.builtin.set_fact:
    vms_vm_node: "{{ item.node }}"
  with_items: "{{ vms_vm_list.json.data }}"
  loop_control:
    label: "{{ item.vmid }}"
  when: item.vmid == (vms_vmid | int)

- name: Migrate new image to target node
  community.general.proxmox_kvm:
    api_host: "{{ global_proxmox_api_host }}"
    api_user: "{{ global_proxmox_api_user }}"
    api_password: "{{ global_proxmox_api_password }}"
    node: "{{ vms_proxmox_node }}"
    vmid: "{{ vms_vmid | int }}"
    migrate: true
    timeout: 300
    state: present
  delegate_to: localhost

# https://pve.proxmox.com/wiki/Storage:_Directory
- name: Make sure /var/lib/vz/snippets folder exists
  ansible.builtin.file:
    path: "/var/lib/vz/snippets"
    state: directory
  become: true
  delegate_to: "{{ vms_proxmox_node }}"

- name: Copy user cloud-init file
  template:
    src: user-data-ci.j2
    dest: "/var/lib/vz/snippets/{{ inventory_hostname }}-user-data-ci.yml"
  become: true
  delegate_to: "{{ vms_proxmox_node }}"

- name: Copy network cloud-init file
  template:
    src: network-data-ci.j2
    dest: "/var/lib/vz/snippets/{{ inventory_hostname }}-network-data-ci.yml"
  become: true
  delegate_to: "{{ vms_proxmox_node }}"
