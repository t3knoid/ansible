---

semaphoreui_setup_url: "https://github.com/semaphoreui/semaphore/releases/download"
semaphoreui_setup_runner_token: "0ZrCUmemNwMQ+4sxY+7Nk0ERwxbpIp0RExAzWYDnKbw="

semaphoreui_setup_projects:
  - name: "Home Lab"
    alert_enabled: false
    alert: false
    alert_chat: ""
    max_parallel_tasks: 0
    repositories:
      - name: "Ansible"
        git_url: "https://github.com/t3knoid/ansible.git"
        git_branch: "main"
    keystores:
      - name: "Semaphore user credentials"
        type: "login_password"
        login_password:
          login: "{{ semaphoreui_setup_semaphore_login }}"
          password: "{{ semaphoreui_setup_semaphore_password }}"
      - name: "Ansible user credentials"
        type: "login_password"
        login_password:
          login: "{{ semaphoreui_setup_ansible_login }}"
          password: "{{ semaphoreui_setup_ansible_password }}"
      - name: "Ansible vault password"
        type: "login_password"
        login_password:
          login: ""
          password: "{{ semaphoreui_setup_ansible_vault_password }}"
      # - name: "sample ssh"
      #   type: "ssh"
      #   ssh:
      #     login:
      #     passphrase:
      #     private_key:
      - name: "None"
        type: "none"
        empty: true
    views:
      - title: "Linux Checks"
      - title: "Security Updates"
      - title: "Backups"
      - title: "Semaphore"
      - title: "Certs"
      - title: "Deploys"
    templates:
      - name: "Check connection to Redmine"
        playbook: "playbooks/linux/check_connection.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "redmine"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Linux Checks"
        environment: "Empty"
      - name: "Check connection to Ombi"
        playbook: "playbooks/linux/check_connection.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "ombi"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Linux Checks"
        environment: "Empty"
      - name: "Check connection to Plex"
        playbook: "playbooks/linux/check_connection.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "plex"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Linux Checks"
        environment: "Empty"
      - name: "Check connection to Services"
        playbook: "playbooks/linux/check_connection.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "plex"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Linux Checks"
        environment: "Empty"
      - name: "Check connection to DNS"
        playbook: "playbooks/linux/check_connection.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "dns"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Linux Checks"
        environment: "Empty"
      - name: "Check connection to Minecraft"
        playbook: "playbooks/linux/check_connection.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "minecraft"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Linux Checks"
        environment: "Empty"
      - name: "Check connection to PostgreSQL"
        playbook: "playbooks/linux/check_connection.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "pg"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Linux Checks"
        environment: "Empty"
      - name: "Check connection to RProxy"
        playbook: "playbooks/linux/check_connection.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "rproxy"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Linux Checks"
        environment: "Empty"
      - name: "Check connection to Semaphore"
        playbook: "playbooks/linux/check_connection.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "semaphore"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Linux Checks"
        environment: "Empty"
      - name: "Deploy security updates to Plex"
        playbook: "playbooks/linux/deploy_updates.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "plex"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Security Updates"
        environment: "Empty"
      - name: "Deploy security updates to Ombi"
        playbook: "playbooks/linux/deploy_updates.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "ombi"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Security Updates"
        environment: "Empty"
      - name: "Deploy security updates to Services"
        playbook: "playbooks/linux/deploy_updates.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "services"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Security Updates"
        environment: "Empty"
      - name: "Deploy security updates to PostgreSQL"
        playbook: "playbooks/linux/deploy_updates.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "pg"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Security Updates"
        environment: "Empty"
      - name: "Deploy security updates to DNS"
        playbook: "playbooks/linux/deploy_updates.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "dns"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Security Updates"
        environment: "Empty"
      - name: "Deploy security updates to Minecraft"
        playbook: "playbooks/linux/deploy_updates.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "minecraft"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Security Updates"
        environment: "Empty"
      - name: "Deploy security updates to Redmine"
        playbook: "playbooks/linux/deploy_updates.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "redmine"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Security Updates"
        environment: "Empty"
      - name: "Deploy security updates to RProxy"
        playbook: "playbooks/linux/deploy_updates.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "rproxy"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Security Updates"
        environment: "Empty"
      - name: "Deploy security updates to Ansible"
        playbook: "playbooks/linux/deploy_updates.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "ansible"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Security Updates"
        environment: "Empty"
      - name: "Deploy security updates to Semaphore"
        playbook: "playbooks/linux/deploy_updates.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "semaphore"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Security Updates"
        environment: "Empty"
      - name: "Backup Semaphore Database"
        playbook: "playbooks/semaphoreui/backup_db.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "semaphore"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Backups"
        environment: "Empty"
      - name: "Backup Ombi Database"
        playbook: "playbooks/ombi/backup_db.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "ombi"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Backups"
        environment: "Empty"
      - name: "Backup Lidarr Database"
        playbook: "playbooks/services/backup_lidarr_db.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "services"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Backups"
        environment: "Empty"
      - name: "Backup Sonarr Database"
        playbook: "playbooks/services/backup_sonarr_db.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "services"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Backups"
        environment: "Empty"
      - name: "Backup Radarr Database"
        playbook: "playbooks/services/backup_radarr_db.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "services"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Backups"
        environment: "Empty"
      - name: "Backup Tautulli Database"
        playbook: "playbooks/tautulli/backup_db.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "tautulli"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Backups"
        environment: "Empty"
      - name: "Setup Semaphore"
        playbook: "playbooks/semaphoreui/setup_semaphoreui.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "semaphore"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Semaphore"
        environment: "Empty"
      - name: "Request Certificates for homelab.refol.us"
        playbook: "playbooks/certs/generate_certs.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "redmine"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Certs"
        environment: "Empty"
      - name: "Stage Certificates for homelab.refol.us"
        playbook: "playbooks/certs/stage_certs.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "redmine"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Certs"
        environment: "Empty"
      - name: "Request Certificates for all hosts"
        playbook: "playbooks/certs/generate_certs.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "rproxy"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Certs"
        environment: "Empty"
      - name: "Stage Certificates for all hosts"
        playbook: "playbooks/certs/stage_certs.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "rproxy"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Certs"
        environment: "Empty"
      - name: "Deploy Sonarr"
        playbook: "playbooks/services/deploy_sonarr.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "services"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Deploys"
        environment: "Empty"
      - name: "Deploy Radarr"
        playbook: "playbooks/services/deploy_radarr.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "services"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Deploys"
        environment: "Empty"
      - name: "Deploy Lidarr"
        playbook: "playbooks/services/deploy_lidarr.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "services"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Deploys"
        environment: "Empty"
      - name: "Deploy Calibreweb"
        playbook: "playbooks/services/deploy_calibreweb.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "services"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Deploys"
        environment: "Empty"
      - name: "Deploy Lazy Librarian"
        playbook: "playbooks/services/deploy_lazylibrarian.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "services"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Deploys"
        environment: "Empty"
      - name: "Deploy Sabnzbd"
        playbook: "playbooks/services/deploy_sabnzbd.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "services"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Deploys"
        environment: "Empty"
      - name: "Deploy Redmine"
        playbook: "playbooks/redmine/deploy_redmine.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "redmine"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Deploys"
        environment: "Empty"
      - name: "Deploy Plex"
        playbook: "playbooks/plex/deploy_plex.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "plex"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Deploys"
        environment: "Empty"
      - name: "Deploy Bedrock"
        playbook: "playbooks/minecraft/deploy_bedrock.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "minecraft"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Deploys"
        environment: "Empty"
      - name: "Deploy Ombi"
        playbook: "playbooks/ombi/deploy_ombi.yml"
        app: "ansible"
        arguments: "[\"-k\"]"
        inventory: "ombi"
        credentials:
          - "Ansible vault password"
        repository: "Ansible"
        view: "Deploys"
        environment: "Empty"
