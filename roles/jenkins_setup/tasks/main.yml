---

- name: Create Jenkins home folder
  ansible.builtin.file:
    path: "{{ jenkins_setup_home }}"
    mode: "0774"
    owner: "{{ users_list[0].username }}"
    group: "{{ users_list[0].username }}"
    state: directory

- name: Copy config.yaml
  ansible.builtin.copy:
    src: jenkins.yaml
    dest: "{{ jenkins_setup_home }}/jenkins.yaml"
    mode: "0644"
    owner: "{{ users_list[0].username }}"
    group: "{{ users_list[0].username }}"

- name: Add Jenkins apt repository key
  ansible.builtin.get_url:
    url: "{{ jenkins_setup_repo_key_url }}"
    dest: "{{ jenkins_setup_repo_key_local }}"
    mode: '0644'
    force: true

- name: Remove existing Jenkins repo key
  ansible.builtin.file:
    path: "{{ jenkins_setup_repo_key_local }}"

- name: Update apt repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by={{ jenkins_setup_repo_key_local }}] https://pkg.jenkins.io/debian-stable binary/"
    update_cache: false
    filename: jenkins
    mode: "0644"
    state: present

- name: Install Jenkins
  ansible.builtin.apt:
    name: jenkins
    update_cache: true
    state: present

- name: Download jenkins-cli.jar
  ansible.builtin.get_url:
    url: "http://localhost:8080/jnlpJars/jenkins-cli.jar"
    dest: /tmp/jenkins-cli.jar
    mode: "0644"

- name: Modify JENKINS_HOME environment variable
  ansible.builtin.lineinfile:
    path: /usr/lib/systemd/system/jenkins.service
    regexp: '^Environment="JENKINS_HOME='
    line: 'Environment="JENKINS_HOME={{ jenkins_setup_home }}"'
    state: present

- name: Set Jenkins WorkingDirectory
  ansible.builtin.lineinfile:
    path: /usr/lib/systemd/system/jenkins.service
    regexp: '^WorkingDirectory='
    line: 'WorkingDirectory={{ jenkins_setup_home }}'
    state: present

- name: Set Java options
  ansible.builtin.lineinfile:
    path: /usr/lib/systemd/system/jenkins.service
    regexp: '^Environment="JAVA_OPTS='
    line: 'Environment="JAVA_OPTS={{ jenkins_setup_javaopts }}"'
    state: present

- name: Set Jenkins port to listen to
  ansible.builtin.lineinfile:
    path: /usr/lib/systemd/system/jenkins.service
    regexp: '^Environment="JENKINS_PORT='
    line: 'Environment="JENKINS_PORT={{ jenkins_setup_port }}"'
    state: present

- name: Set Jenkins user
  ansible.builtin.lineinfile:
    path: /usr/lib/systemd/system/jenkins.service
    regexp: '^User='
    line: 'User={{ users_list[0].username }}'
    state: present

- name: Set Jenkins group
  ansible.builtin.lineinfile:
    path: /usr/lib/systemd/system/jenkins.service
    regexp: '^Group='
    line: 'Group={{ users_list[0].username }}'
    state: present

- name: Set Jenkins port to listen to
  ansible.builtin.lineinfile:
    path: /usr/lib/systemd/system/jenkins.service
    regexp: '^Environment="JENKINS_PORT='
    line: 'Environment="JENKINS_PORT={{ jenkins_setup_port }}"'
    state: present

- name: Reload systemd to apply changes
  ansible.builtin.systemd:
    daemon_reload: true

- name: Restart Jenkins service
  ansible.builtin.systemd:
    name: jenkins
    state: restarted

- name: Read default admin password
  ansible.builtin.slurp:
    src: "{{ jenkins_setup_home }}/secrets/initialAdminPassword"
  register: jenkins_setup_admin_pwd

- name: Install plugins
  ansible.builtin.command: >
    java -jar /tmp/jenkins-cli.jar
    -s http://localhost:8080/
    -auth admin:{{ jenkins_setup_admin_pwd['content'] | b64decode }}
    install-plugin {{ item }}
  loop: "{{ jenkins_setup_plugins }}"
  changed_when: false

- name: Safe restart Jenkins
  ansible.builtin.command: >
    java -jar /tmp/jenkins-cli.jar
    -s http://localhost:8080/
    -auth admin:{{ jenkins_setup_admin_pwd['content'] | b64decode }}
    safe-restart
  changed_when: false
