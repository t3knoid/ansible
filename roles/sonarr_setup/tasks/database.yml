---

- name: Ensure PostgreSQL is installed
  ansible.builtin.apt:
    name: postgresql
    state: present
  delegate to: sonarr_setup_pg_host

- name: Start and enable PostgreSQL service
  ansible.builtin.systemd:
    name: postgresql
    state: started
    enabled: true
  delegate to: sonarr_setup_pg_host

- name: Ensure PostgreSQL Python library is installed
  ansible.builtin.apt:
    name: python3-psycopg2
    state: present
  delegate to: sonarr_setup_pg_host

- name: Create the PostgreSQL user
  community.postgresql.postgresql_user:
    name: "{{ sonarr_setup_db_user }}"
    password: "{{ sonarr_setup_db_password }}"
    state: present
  become: true
  become_user: postgres
  delegate to: sonarr_setup_pg_host
  notify: Restart PostgreSQL

- name: Create the PostgreSQL main database
  community.postgresql.postgresql_db:
    name: "{{ sonarr_setup_db_main }}"
    owner: "{{ sonarr_setup_db_user }}"
    state: present
  become: true
  become_user: postgres
  delegate to: sonarr_setup_pg_host
  notify: Restart PostgreSQL

- name: Create the PostgreSQL log database
  community.postgresql.postgresql_db:
    name: "{{ sonarr_setup_db_log }}"
    owner: "{{ sonarr_setup_db_user }}"
    state: present
  become: true
  become_user: postgres
  delegate to: sonarr_setup_pg_host
  notify: Restart PostgreSQL

- name: Update pg_hba.conf to allow password access using host ip address
  community.postgresql.postgresql_pg_hba:
    dest: "/etc/postgresql/{{ postgresql_setup_version }}/main/pg_hba.conf"
    contype: host
    users: all
    source: "{{ global_ip_address }}/32"
    databases: all
    method: md5
    delegate to: sonarr_setup_pg_host
  notify: Restart PostgreSQL
