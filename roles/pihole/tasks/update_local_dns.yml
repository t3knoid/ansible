---

- name: Check if hostname already exists
  ansible.builtin.command: 'grep -E "^([0-9]{1,3}\\.){3}[0-9]{1,3} {{ inventory_hostname }}" {{ pihole_custom_list_file }}'
  register: vms_hostname_check
  failed_when: vms_hostname_check.rc == 2
  delegate_to: "{{ pihole_primary_dns }}"

- name: Add new entry if hostname does not exist
  ansible.builtin.lineinfile:
    path: "{{ pihole_custom_list_file }}"
    line: "{{ hostvars[inventory_hostname].ip_address }} {{ inventory_hostname }}.refol.us"
    state: present
    create: true
    mode: "0644"
  become: true
  when: vms_hostname_check.rc == 1
  register: pihole_custom_list_file_result
  delegate_to: "{{ pihole_primary_dns }}"

- name: Update existing entry
  ansible.builtin.lineinfile:
    path: "{{ pihole_custom_list_file }}"
    regexp: "^([0-9]{1,3}\\.){3}[0-9]{1,3} {{ inventory_hostname }}"
    line: "{{ hostvars[inventory_hostname].ip_address }} {{ inventory_hostname }}.refol.us"
  become: true
  when: vms_hostname_check.rc == 0
  register: pihole_custom_list_file_result
  delegate_to: "{{ pihole_primary_dns }}"

- name: Reload DNS list and flush cache
  ansible.builtin.command: 'sudo pihole restartdns reload'
  register: pihole_restartdns_result
  delegate_to: "{{ pihole_primary_dns }}"
