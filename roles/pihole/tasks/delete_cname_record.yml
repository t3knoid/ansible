---

- name: Include get_pihole_sid.yml tasks
  ansible.builtin.include_tasks: get_pihole_sid.yml

- name: Set cname entry
  ansible.builtin.set_fact:
    pihole_cname_entry: "{{ pihole_cname_domain }},{{ pihole_cname_target_domain }}"

- name: Encode Cname entry
  ansible.builtin.set_fact:
    pihole_cname_entry_url_encoded: "{{ pihole_cname_entry | urlencode() }}"

- name: Delete cname record using Pi-hole config/dns/cnameRecords api
  no_log: false
  ansible.builtin.uri:
    url: "http://{{ pihole_api_host }}/api/config/dns/cnameRecords/{{ pihole_cname_entry_url_encoded }}"
    method: DELETE
    headers:
      sid: "{{ pihole_sid }}"
    return_content: true
    status_code: [204, 404]
  register: result_cname_op
  delegate_to: localhost
  changed_when: result_cname_op.status ==  204

- debug:
    var: result_cname_op

- name: Store error message if operation is not successful
  ansible.builtin.set_fact:
    pihole_error_msg: "{{ result_cname_op.json.error.message }}"
  when: result_cname_op.status != 204 and result_cname_op.json.error is defined

- name: Show message if operation is not successful
  ansible.builtin.set_fact:
      pihole_error_msg: "{{ result_cname_op.msg }}"
  when: result_cname_op.status != 204 and result_cname_op.json.error is not defined

- name: Add pause before deleting session ID
  ansible.builtin.pause:
    seconds: 5

- name: Delete Session ID
  no_log: false
  ansible.builtin.uri:
    url: "http://{{ pihole_api_host }}/api/auth"
    method: DELETE
    headers:
      sid: "{{ pihole_sid }}"
    return_content: false
    status_code: 204
  register: session_delete
  delegate_to: localhost
  changed_when: session_delete.failed | bool
  when: pihole_sid is defined

- name: Delete cname operation failure
  ansible.builtin.fail:
    msg: "{{ pihole_error_msg }}"
  when: result_cname_op.status != 204
